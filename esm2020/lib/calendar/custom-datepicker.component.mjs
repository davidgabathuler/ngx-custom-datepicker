import { Component, Input, ViewChildren, EventEmitter, Output, ViewEncapsulation, ContentChildren } from '@angular/core';
import { CalendarService } from '../_service/calendar.service';
import { DayDirective } from '../day.directive';
import * as i0 from "@angular/core";
import * as i1 from "../_service/calendar.service";
import * as i2 from "../month-view/month-view.component";
import * as i3 from "../month-select/month-select.component";
import * as i4 from "@angular/common";
export class CustomDatepickerComponent {
    constructor(calendarService, cdr) {
        this.calendarService = calendarService;
        this.cdr = cdr;
        /**
         * @description
         *  Array of selected dates.
         * */
        this.selectedDates = [];
        this.selectedDatesChange = new EventEmitter();
        /**
         * @description
         *  Callback event when click on day
         */
        this.onDayClick = new EventEmitter();
        /**
         * @description
         * Start week day, default 0
         */
        this.weekStart = 0;
        /**
         * @description
         * Weekends, default [0,6], set Day.isWeekend true
         */
        this.weekends = [0, 6];
        this.dayDirectives = [];
    }
    __getDirectives() {
        if (this.dayDirectivesQueryList) {
            this.dayDirectives = this.dayDirectivesQueryList.toArray();
            this.dayDirectivesQueryList.changes.subscribe((data) => {
                this.dayDirectives = data.toArray();
            });
        }
    }
    ngAfterViewInit() {
        this.__getDirectives();
    }
    getMonthDayDirectives(date) {
        return this.dayDirectives.filter((directive) => directive.date.getMonth() === date.getMonth() && directive.date.getFullYear() === date.getFullYear());
    }
    recountWidth() {
        let width = 0;
        this.columns ? this.columns.toArray().map((item) => (width += item.elementView.nativeElement.clientWidth)) : null;
        this.calendarService.animationStep.value === 'stop' && this.calendarService.viewSelectorMode === 'days'
            ? (this.width = width)
            : null;
        this.cdr.detectChanges();
    }
    ngAfterViewChecked() {
        this.recountWidth();
    }
    ngOnInit() {
        if (!this.shownDate) {
            this.shownDate = new Date();
        }
        this.calendarService.animationStep.subscribe((data) => {
            if (data === 'stop') {
                setTimeout(() => this.recountWidth(), 10);
            }
        });
        this.calendarService.selectedDates.subscribe((data) => {
            this.selectedDatesChange.emit(data);
        });
        this.calendarService.clickDayKey.subscribe((data) => {
            data ? this.onDayClick.emit(data.day) : null;
        });
        this.calendarService.days.next(this.days);
        this.calendarService.weekStart = this.weekStart;
        this.calendarService.weekends = this.weekends;
        this.calendarService.viewMode = this.viewMode;
        this.calendarService.viewSelectorMode = 'days';
        this.calendarService.selectMode = this.selectMode;
        this.calendarService.shownDate = this.shownDate;
        this.calendarService.setSelectedDates(this.selectedDates);
        this.calendarService.setDays(this.days);
        this.calendarService.getShownMonths(this.shownDate);
        this.calendarService.setDisabledDates(this.disabledDates);
    }
    getCalendar() {
        return this.calendarService.calendar;
    }
    getViewSelectorMode() {
        return this.calendarService.viewSelectorMode;
    }
    calculate() {
        const date = this.shownDate;
        let countMonths = 0;
        const months = [];
        const lastDate = date ? date : this.calendarService.getLastDate();
        countMonths = this.calendarService.getCountMonths();
        for (let i = countMonths - 1; i >= 0; i--) {
            months.push(new Date(lastDate).adjustMonth(-i));
        }
        return months;
    }
    isEqual(array, array1) {
        console.log(array, array1);
        const a = array.filter((item) => array1.includes(item));
        return a.length === 0 && array.length === array1.length;
    }
    _viewMode(simpleChange) {
        if (simpleChange.viewMode.currentValue !== simpleChange.viewMode.previousValue) {
            this.calendarService.viewMode = simpleChange.viewMode.currentValue;
            this.calendarService.getShownMonths(this.shownDate);
            setTimeout(() => this.recountWidth(), 10);
        }
    }
    _selectMode(simpleChange) {
        if (simpleChange.selectMode.currentValue !== simpleChange.selectMode.previousValue) {
            this.calendarService.selectMode = simpleChange.selectMode.currentValue;
            this.calendarService.getShownMonths(this.shownDate);
            setTimeout(() => this.recountWidth(), 10);
        }
    }
    _shownDate(simpleChange) {
        if (simpleChange.shownDate.currentValue !== simpleChange.shownDate.previousValue) {
            this.calendarService.shownDate = simpleChange.shownDate.currentValue;
            this.calendarService.getShownMonths(this.shownDate);
            setTimeout(() => this.recountWidth(), 10);
        }
    }
    ngOnChanges(simpleChange) {
        simpleChange.viewMode && this._viewMode(simpleChange);
        simpleChange.selectMode && this._selectMode(simpleChange);
        simpleChange.shownDate && this._shownDate(simpleChange);
        simpleChange.days && this.calendarService.days.next(this.days);
        simpleChange.selectedDates && this.calendarService.setSelectedDates(this.selectedDates);
    }
    goNext() {
        const lastDate = this.calendarService.calendar[this.calendarService.calendar.length - 1];
        this.calendarService.goNext(lastDate);
    }
    goPrev() {
        const firstDate = this.calendarService.calendar[0];
        this.calendarService.goPrev(firstDate);
    }
}
/** @nocollapse */ CustomDatepickerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.0", ngImport: i0, type: CustomDatepickerComponent, deps: [{ token: i1.CalendarService }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });
/** @nocollapse */ CustomDatepickerComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.3.0", type: CustomDatepickerComponent, selector: "ngx-custom-datepicker", inputs: { selectedDates: "selectedDates", days: "days", shownDate: "shownDate", viewMode: "viewMode", weekStart: "weekStart", weekends: "weekends", selectMode: "selectMode", disabledDates: "disabledDates" }, outputs: { selectedDatesChange: "selectedDatesChange", onDayClick: "onDayClick" }, providers: [CalendarService], queries: [{ propertyName: "dayDirectivesQueryList", predicate: DayDirective }], viewQueries: [{ propertyName: "columns", predicate: ["column"], descendants: true }], usesOnChanges: true, ngImport: i0, template: "<div class=\"calendarWrap\">\n  <div class=\"headerCalendar\"></div>\n  <div class=\"dateSelector\">\n    <div (click)=\"goPrev()\" class=\"nextPrevBtn\" style=\"left: 0\">{{ '<' }}</div>\n    <div class=\"wrapMonths\" [ngStyle]=\"{ width: width + 'px' }\">\n      <div class=\"months\" *ngIf=\"getViewSelectorMode() === 'days'\">\n        <app-month-view\n          *ngFor=\"let date of getCalendar()\"\n          #column\n          [date]=\"date\"\n          [dayDirectives]=\"getMonthDayDirectives(date)\"\n        >\n        </app-month-view>\n      </div>\n\n      <div *ngIf=\"getViewSelectorMode() === 'months'\" style=\"width: 100%; display: flex; flex: 1\">\n        <app-month-select *ngFor=\"let date of getCalendar()\" #column [date]=\"date\"> </app-month-select>\n      </div>\n    </div>\n    <div (click)=\"goNext()\" class=\"nextPrevBtn\" style=\"right: 0\">{{ '>' }}</div>\n  </div>\n</div>\n", styles: ["app-calendar{display:block;float:left;width:100%}.nextPrevBtn{display:flex;flex-direction:column;justify-content:center;align-items:center;-webkit-user-select:none;-moz-user-select:none;user-select:none;position:absolute;cursor:pointer;padding:8px 16px;transition:all .2s;font-size:.9em;color:#26b1b1;z-index:1;background:#fff}.nextPrevBtn:hover{background:#eee}app-week-view{width:100%;display:flex;flex-direction:row}.dayWeekTitle{flex:1;color:#a9a9a9;justify-content:center;align-items:center;display:flex;font-size:.8em;padding:4px}.styledDay.isWeekEnd{color:#c53c3c}.weekWrap{display:flex;flex-direction:column}app-month-select{display:flex;float:left;min-width:200px;-webkit-animation:appear .2s ease-in-out;animation:appear .2s ease-in-out}.monthItem{width:33%;font-size:.8em;text-align:center;padding:9px 0;box-shadow:0 0 0 1px #f4f3f3;color:#313131}.monthItem:hover{-webkit-user-select:none;-moz-user-select:none;user-select:none;cursor:pointer;background:#eee;transition:.2s}app-month-view{display:flex;float:left;min-width:200px;-webkit-animation:appear .2s ease-in-out;animation:appear .2s ease-in-out;height:100%}@-webkit-keyframes appear{0%{transform:scale(.6);opacity:.6}50%{transform:opacity(0);transform:scale(.8)}to{opacity:1;transform:scale(1)}}@keyframes appear{0%{transform:scale(.6);opacity:.6}50%{transform:opacity(0);transform:scale(.8)}to{opacity:1;transform:scale(1)}}.months{display:flex;flex-direction:row;position:relative;overflow:hidden;height:100%}.wrapMonths{display:block;float:left;overflow:hidden;width:477px}.monthOne{position:relative}.monthOne.right{-webkit-animation:right .2s ease-in-out;animation:right .2s ease-in-out}.monthOne.left{-webkit-animation:left .2s ease-in-out;animation:left .2s ease-in-out}@-webkit-keyframes left{0%{transform:translate(-100%)}to{transform:translate(0)}}@keyframes left{0%{transform:translate(-100%)}to{transform:translate(0)}}@-webkit-keyframes right{0%{transform:translate(0)}to{transform:translate(-100%)}}@keyframes right{0%{transform:translate(0)}to{transform:translate(-100%)}}.monthSelectBtn{display:flex;flex-direction:row;flex:1;padding:4px 8px}app-day-view{display:block;float:left;width:100%}.styledDay.isDisabled{color:#a7a7a7}.styledDay.isInPeriod{background:#26b1b12b!important}.styledDay.isSelected{background:#26b1b180!important}.styledDay.isSelected.period.end{background:linear-gradient(120deg,#26b1b12b 45%,#26b1b180 113%)!important;-webkit-animation:appear .2s ease-in-out;animation:appear .2s ease-in-out}.styledDay.isSelected.period.start{background:linear-gradient(-50deg,#26b1b12b 45%,#26b1b180 113%)!important;-webkit-animation:appear .2s ease-in-out;animation:appear .2s ease-in-out}.day{display:flex;flex:1;font-size:.8em;padding:6px}.dayDir{display:block;float:left;width:100%;height:100%}.styledDay{display:flex;flex:1;flex-direction:column;justify-content:center;align-items:center;color:#313131;transition:all .2s}.styledDay:hover{background:#eee;cursor:pointer;color:#313131;-webkit-user-select:none;-moz-user-select:none;user-select:none}.dayWrap{display:flex;flex:1;height:100%;width:100%}.calendarWrap{float:left;display:flex;background:#fff;flex-direction:column;border-radius:4px;transition:all .2s;width:-webkit-min-content;width:-moz-min-content;width:min-content}.dateSelector{float:left;width:auto;display:flex;position:relative;flex-direction:row;transition:all .2s}.monthWrap{padding:0 8px;display:block;float:left;width:100%}.f1{display:flex;flex:1}.monthHeader{text-align:center;padding:8px 16px;font-size:15px;color:#2b2b2b}.monthHeader:first-letter{text-transform:uppercase}.monthHeader:hover{cursor:pointer;-webkit-user-select:none;-moz-user-select:none;user-select:none;background:#eee}\n"], components: [{ type: i2.MonthViewComponent, selector: "app-month-view", inputs: ["date", "updateDate", "dayDirectives"], outputs: ["elWidth"] }, { type: i3.MonthSelectComponent, selector: "app-month-select", inputs: ["date"] }], directives: [{ type: i4.NgStyle, selector: "[ngStyle]", inputs: ["ngStyle"] }, { type: i4.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i4.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }], encapsulation: i0.ViewEncapsulation.None });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.0", ngImport: i0, type: CustomDatepickerComponent, decorators: [{
            type: Component,
            args: [{ selector: 'ngx-custom-datepicker', providers: [CalendarService], encapsulation: ViewEncapsulation.None, template: "<div class=\"calendarWrap\">\n  <div class=\"headerCalendar\"></div>\n  <div class=\"dateSelector\">\n    <div (click)=\"goPrev()\" class=\"nextPrevBtn\" style=\"left: 0\">{{ '<' }}</div>\n    <div class=\"wrapMonths\" [ngStyle]=\"{ width: width + 'px' }\">\n      <div class=\"months\" *ngIf=\"getViewSelectorMode() === 'days'\">\n        <app-month-view\n          *ngFor=\"let date of getCalendar()\"\n          #column\n          [date]=\"date\"\n          [dayDirectives]=\"getMonthDayDirectives(date)\"\n        >\n        </app-month-view>\n      </div>\n\n      <div *ngIf=\"getViewSelectorMode() === 'months'\" style=\"width: 100%; display: flex; flex: 1\">\n        <app-month-select *ngFor=\"let date of getCalendar()\" #column [date]=\"date\"> </app-month-select>\n      </div>\n    </div>\n    <div (click)=\"goNext()\" class=\"nextPrevBtn\" style=\"right: 0\">{{ '>' }}</div>\n  </div>\n</div>\n", styles: ["app-calendar{display:block;float:left;width:100%}.nextPrevBtn{display:flex;flex-direction:column;justify-content:center;align-items:center;-webkit-user-select:none;-moz-user-select:none;user-select:none;position:absolute;cursor:pointer;padding:8px 16px;transition:all .2s;font-size:.9em;color:#26b1b1;z-index:1;background:#fff}.nextPrevBtn:hover{background:#eee}app-week-view{width:100%;display:flex;flex-direction:row}.dayWeekTitle{flex:1;color:#a9a9a9;justify-content:center;align-items:center;display:flex;font-size:.8em;padding:4px}.styledDay.isWeekEnd{color:#c53c3c}.weekWrap{display:flex;flex-direction:column}app-month-select{display:flex;float:left;min-width:200px;-webkit-animation:appear .2s ease-in-out;animation:appear .2s ease-in-out}.monthItem{width:33%;font-size:.8em;text-align:center;padding:9px 0;box-shadow:0 0 0 1px #f4f3f3;color:#313131}.monthItem:hover{-webkit-user-select:none;-moz-user-select:none;user-select:none;cursor:pointer;background:#eee;transition:.2s}app-month-view{display:flex;float:left;min-width:200px;-webkit-animation:appear .2s ease-in-out;animation:appear .2s ease-in-out;height:100%}@-webkit-keyframes appear{0%{transform:scale(.6);opacity:.6}50%{transform:opacity(0);transform:scale(.8)}to{opacity:1;transform:scale(1)}}@keyframes appear{0%{transform:scale(.6);opacity:.6}50%{transform:opacity(0);transform:scale(.8)}to{opacity:1;transform:scale(1)}}.months{display:flex;flex-direction:row;position:relative;overflow:hidden;height:100%}.wrapMonths{display:block;float:left;overflow:hidden;width:477px}.monthOne{position:relative}.monthOne.right{-webkit-animation:right .2s ease-in-out;animation:right .2s ease-in-out}.monthOne.left{-webkit-animation:left .2s ease-in-out;animation:left .2s ease-in-out}@-webkit-keyframes left{0%{transform:translate(-100%)}to{transform:translate(0)}}@keyframes left{0%{transform:translate(-100%)}to{transform:translate(0)}}@-webkit-keyframes right{0%{transform:translate(0)}to{transform:translate(-100%)}}@keyframes right{0%{transform:translate(0)}to{transform:translate(-100%)}}.monthSelectBtn{display:flex;flex-direction:row;flex:1;padding:4px 8px}app-day-view{display:block;float:left;width:100%}.styledDay.isDisabled{color:#a7a7a7}.styledDay.isInPeriod{background:#26b1b12b!important}.styledDay.isSelected{background:#26b1b180!important}.styledDay.isSelected.period.end{background:linear-gradient(120deg,#26b1b12b 45%,#26b1b180 113%)!important;-webkit-animation:appear .2s ease-in-out;animation:appear .2s ease-in-out}.styledDay.isSelected.period.start{background:linear-gradient(-50deg,#26b1b12b 45%,#26b1b180 113%)!important;-webkit-animation:appear .2s ease-in-out;animation:appear .2s ease-in-out}.day{display:flex;flex:1;font-size:.8em;padding:6px}.dayDir{display:block;float:left;width:100%;height:100%}.styledDay{display:flex;flex:1;flex-direction:column;justify-content:center;align-items:center;color:#313131;transition:all .2s}.styledDay:hover{background:#eee;cursor:pointer;color:#313131;-webkit-user-select:none;-moz-user-select:none;user-select:none}.dayWrap{display:flex;flex:1;height:100%;width:100%}.calendarWrap{float:left;display:flex;background:#fff;flex-direction:column;border-radius:4px;transition:all .2s;width:-webkit-min-content;width:-moz-min-content;width:min-content}.dateSelector{float:left;width:auto;display:flex;position:relative;flex-direction:row;transition:all .2s}.monthWrap{padding:0 8px;display:block;float:left;width:100%}.f1{display:flex;flex:1}.monthHeader{text-align:center;padding:8px 16px;font-size:15px;color:#2b2b2b}.monthHeader:first-letter{text-transform:uppercase}.monthHeader:hover{cursor:pointer;-webkit-user-select:none;-moz-user-select:none;user-select:none;background:#eee}\n"] }]
        }], ctorParameters: function () { return [{ type: i1.CalendarService }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { selectedDates: [{
                type: Input
            }], selectedDatesChange: [{
                type: Output
            }], onDayClick: [{
                type: Output
            }], days: [{
                type: Input
            }], shownDate: [{
                type: Input
            }], viewMode: [{
                type: Input
            }], weekStart: [{
                type: Input
            }], weekends: [{
                type: Input
            }], selectMode: [{
                type: Input
            }], disabledDates: [{
                type: Input
            }], columns: [{
                type: ViewChildren,
                args: ['column']
            }], dayDirectivesQueryList: [{
                type: ContentChildren,
                args: [DayDirective]
            }] } });
//# sourceMappingURL=data:application/json;base64,