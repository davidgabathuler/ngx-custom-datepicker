{"version":3,"file":"ngx-custom-datepicker.mjs","sources":["../../../projects/ngx-custom-datepicker/src/lib/interfaces.ts","../../../projects/ngx-custom-datepicker/src/lib/_service/calendar.service.ts","../../../projects/ngx-custom-datepicker/src/lib/day.directive.ts","../../../projects/ngx-custom-datepicker/src/lib/_service/month.service.ts","../../../projects/ngx-custom-datepicker/src/lib/_service/week.service.ts","../../../projects/ngx-custom-datepicker/src/lib/_service/day.service.ts","../../../projects/ngx-custom-datepicker/src/lib/day-view/day-view.component.ts","../../../projects/ngx-custom-datepicker/src/lib/day-view/day-view.component.html","../../../projects/ngx-custom-datepicker/src/lib/week-view/week-view.component.ts","../../../projects/ngx-custom-datepicker/src/lib/week-view/week-view.component.html","../../../projects/ngx-custom-datepicker/src/lib/month-view/month-view.component.ts","../../../projects/ngx-custom-datepicker/src/lib/month-view/month-view.component.html","../../../projects/ngx-custom-datepicker/src/lib/month-select/month-select.component.ts","../../../projects/ngx-custom-datepicker/src/lib/month-select/month-select.component.html","../../../projects/ngx-custom-datepicker/src/lib/calendar/custom-datepicker.component.ts","../../../projects/ngx-custom-datepicker/src/lib/calendar/custom-datepicker.component.html","../../../projects/ngx-custom-datepicker/src/lib/year-select/year-select.component.ts","../../../projects/ngx-custom-datepicker/src/lib/year-select/year-select.component.html","../../../projects/ngx-custom-datepicker/src/lib/custom-datepicker.module.ts","../../../projects/ngx-custom-datepicker/src/public-api.ts","../../../projects/ngx-custom-datepicker/src/ngx-custom-datepicker.ts"],"sourcesContent":["import { Type } from '@angular/core';\n\nexport interface Day {\n  isDisabled: boolean;\n  isWeekEnd: boolean;\n  isSelected: boolean;\n  isHovered: boolean;\n  isInPeriod?: boolean;\n  date?: Date;\n}\n\nexport interface Week {\n  id: number;\n  days: Day[] | null;\n}\n\nexport interface Month {\n  id: number;\n  date: Date;\n  weeks: Week[] | null;\n}\n\nexport interface Calendar {\n  id?: number;\n  months?: Month[] | null;\n}\n\nexport interface DisabledDates {\n  dates?: Date[];\n  before?: Date;\n  after?: Date;\n}\n\n/**\n * @publicApi\n */\nexport enum SelectMode {\n  Single = 'single',\n  Multiple = 'multiple',\n  Period = 'period'\n}\n\nexport enum ViewMode {\n  Year = 'year',\n  Quarter = 'quarter',\n  Semester = 'semester'\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport { Day, DisabledDates, ViewMode } from '../interfaces';\n\ndeclare global {\n  interface Date {\n    adjustMonth(number: number): Date;\n    adjustDate(number: number): Date;\n    adjustYear(number: number): Date;\n    getFirstDateDay(start: number): number;\n    getDayWithStart(start: number): number;\n    getYmd(): string;\n  }\n}\n\nDate.prototype.adjustDate = function (num = 0): Date {\n  const date = new Date(this);\n  date.setDate(date.getDate() + num);\n  return date;\n};\n\n/** Adjust & setDate = 1 */\nDate.prototype.adjustMonth = function (num = 0): Date {\n  this.setDate(1);\n  this.setMonth(this.getMonth() + num);\n  return this;\n};\n\n/** Adjust & setDate = 1 */\nDate.prototype.adjustYear = function (num = 0): Date {\n  this.setDate(1);\n  this.setMonth(0);\n  this.setYear(this.getFullYear() + num);\n  return this;\n};\n\nDate.prototype.getDayWithStart = function (start: number): number {\n  const date = new Date(this.getTime());\n  let day = date.getDay();\n\n  day = day - start;\n\n  if (day < 0) {\n    day = 7 + day;\n  }\n  return day;\n};\n\nDate.prototype.getFirstDateDay = function (start: any): number {\n  const date = new Date(this.getTime());\n  date.setDate(1);\n  return date.getDayWithStart(start);\n};\n\nDate.prototype.getYmd = function (): string {\n  return (\n    this.getFullYear().toString() +\n    String(this.getMonth().toString()).padStart(2, '0') +\n    String(this.getDate().toString()).padStart(2, '0')\n  );\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CalendarService {\n  calendar: Date[];\n  shownDate: Date;\n  viewMode: number | ViewMode;\n  viewSelectorMode: string;\n  selectMode: string;\n\n  selectedDates: BehaviorSubject<Date[]> = new BehaviorSubject([]);\n  disabledDates: BehaviorSubject<DisabledDates> = new BehaviorSubject(null);\n  days: BehaviorSubject<Day[]> = new BehaviorSubject([]);\n\n  countMonths: number;\n  weekStart: number;\n  weekends: number[];\n\n  animationStep = new BehaviorSubject('stop');\n\n  recountWidth = new BehaviorSubject(1);\n\n  /** Needs for onClickDay detect change */\n  clickDayKey: BehaviorSubject<{\n    day: Day;\n    key: string;\n  } | null> = new BehaviorSubject(null);\n\n  updateDate = new BehaviorSubject(new Date());\n\n  constructor() {}\n\n  setSelectedDates(selectedDates: Date[]): void {\n    this.selectedDates.next(selectedDates);\n  }\n\n  setDisabledDates(disabledDates: DisabledDates): void {\n    this.disabledDates.next(disabledDates);\n  }\n\n  setDays(days: Day[]): void {\n    this.days.next(days);\n  }\n\n  setShownDate(date: Date): void {\n    this.shownDate = date;\n  }\n\n  addSelected(date: Date): void {\n    this.selectedDates.value.push(date);\n    this.selectedDates.next(this.selectedDates.value);\n  }\n\n  public getCountMonths(): number {\n    const viewMode = this.viewMode;\n    if (typeof viewMode === 'number') return viewMode;\n\n    if (viewMode === ViewMode.Quarter) return 3;\n    else if (viewMode === ViewMode.Semester) return 6;\n\n    return 1;\n  }\n\n  public getLastDate(date?: Date): Date {\n    const viewMode = this.viewMode;\n    let lastDate = this.shownDate\n      ? new Date(this.shownDate)\n      : this.selectedDates.value\n      ? new Date(this.selectedDates[this.selectedDates.value.length - 1])\n      : new Date();\n\n    lastDate = date ? new Date(date) : lastDate;\n\n    //if (typeof viewMode === \"ViewMode\") {\n    if (viewMode === ViewMode.Quarter) {\n      if (lastDate.getMonth() >= 0 && lastDate.getMonth() <= 2) {\n        lastDate.setMonth(2);\n      } else if (lastDate.getMonth() >= 3 && lastDate.getMonth() <= 5) {\n        lastDate.setMonth(5);\n      } else if (lastDate.getMonth() >= 6 && lastDate.getMonth() <= 8) {\n        lastDate.setMonth(8);\n      } else if (lastDate.getMonth() >= 9 && lastDate.getMonth() <= 11) {\n        lastDate.setMonth(11);\n      }\n    } else if (viewMode === ViewMode.Semester) {\n      if (lastDate.getMonth() >= 0 && lastDate.getMonth() <= 5) {\n        lastDate.setMonth(5);\n      } else if (lastDate.getMonth() >= 6 && lastDate.getMonth() <= 11) {\n        lastDate.setMonth(11);\n      }\n    }\n\n    return lastDate;\n  }\n\n  getShownYears(lastDateShown: Date): void {\n    let countMonths = 0;\n    const months = [];\n\n    countMonths = this.getCountMonths();\n    this.countMonths = countMonths;\n\n    for (let i = countMonths - 1; i >= 0; i--) {\n      months.push(new Date(lastDateShown).adjustYear(-i));\n    }\n    this.calendar = months;\n    this.viewSelectorMode = 'months';\n  }\n\n  getShownMonths(date?: Date): void {\n    let countMonths = 0;\n    const months = [];\n    const lastDate = this.getLastDate(date);\n\n    countMonths = this.getCountMonths();\n    this.countMonths = countMonths;\n\n    for (let i = countMonths - 1; i >= 0; i--) {\n      months.push(new Date(lastDate).adjustMonth(-i));\n    }\n\n    this.calendar = months;\n    this.viewSelectorMode = 'days';\n  }\n\n  goPrev(firstDate: Date): void {\n    const prevDate = new Date(firstDate);\n\n    if (this.viewSelectorMode === 'days') {\n      prevDate.adjustMonth(-1);\n    } else if (this.viewSelectorMode === 'months') {\n      prevDate.adjustYear(-1);\n    }\n\n    let dates = [...this.calendar];\n    dates.unshift(prevDate);\n    this.calendar = dates;\n    this.animationStep.next('left');\n\n    setTimeout(() => {\n      dates = [...this.calendar];\n      dates.splice(dates.length - 1, 1);\n      this.calendar = dates;\n      this.animationStep.next('stop');\n    }, 205);\n  }\n\n  goNext(lastDate: Date): void {\n    const nextDate = new Date(lastDate);\n\n    if (this.viewSelectorMode === 'days') {\n      nextDate.adjustMonth(1);\n    } else if (this.viewSelectorMode === 'months') {\n      nextDate.adjustYear(1);\n    }\n\n    let dates = [...this.calendar];\n    dates.push(nextDate);\n    this.calendar = dates;\n    this.animationStep.next('right');\n\n    setTimeout(() => {\n      dates = [...this.calendar];\n\n      dates.splice(0, 1);\n      this.calendar = dates;\n      this.animationStep.next('stop');\n    }, 205);\n  }\n}\n","import { ViewContainerRef, Directive, Input, TemplateRef } from '@angular/core';\n\n@Directive({\n  selector: '[ad2day]'\n  //providers: [TemplateRef],\n})\nexport class DayDirective {\n  context: any | null = null;\n  __created = false;\n\n  constructor(private template: TemplateRef<any>, private container: ViewContainerRef) {}\n\n  @Input('ad2dayFrom') date: Date;\n\n  @Input() set day(date: Date) {\n    this.context = {\n      $implicit: date\n    };\n  }\n\n  ngOnInit() {\n    this.context = {\n      $implicit: this.date,\n      date: this.date\n    };\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CalendarService } from './calendar.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MonthService {\n  constructor(private calendarService: CalendarService) {}\n\n  getMonth(date: Date): any[] {\n    const daysInMonth = new Date(date.getFullYear(), date.getMonth() + 1, 0).getDate();\n\n    const weekStart = this.calendarService.weekStart;\n\n    const countWeek = Math.ceil((daysInMonth + date.getFirstDateDay(weekStart)) / 7);\n\n    const weeks = [];\n\n    for (let i = 0; i < countWeek; i++) {\n      const startWeekDate = new Date(date);\n      startWeekDate.setDate(date.getDate() + i * 7 - date.getDayWithStart(weekStart));\n      weeks.push(startWeekDate);\n    }\n\n    return weeks;\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WeekService {\n  getWeek(date: Date): Date[] {\n    const dayInWeek = 7;\n    const days = [];\n\n    for (let i = 0; i < dayInWeek; i++) {\n      const curDate = new Date(date);\n      curDate.setDate(curDate.getDate() + i);\n      days.push(curDate);\n    }\n\n    return days;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CalendarService } from './calendar.service';\nimport { Day } from '../interfaces';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DayService {\n  day: Day;\n  constructor(private calendarService: CalendarService) {}\n\n  private getIsDisabled(date: Date): boolean {\n    const disabledDates = this.calendarService.disabledDates.value;\n    if (!disabledDates) {\n      return false;\n    }\n    if (\n      disabledDates.dates &&\n      disabledDates.dates.length > 0 &&\n      disabledDates.dates.find((disableDate) => disableDate.getTime() === date.getTime())\n    ) {\n      return true;\n    }\n    if (disabledDates.after && disabledDates.after.getTime() < date.getTime()) {\n      return true;\n    }\n    if (disabledDates.before && disabledDates.before.getTime() > date.getTime()) {\n      return true;\n    }\n    return false;\n  }\n\n  createDay(date: Date): Day {\n    this.day = {\n      isDisabled: this.getIsDisabled(date),\n      isWeekEnd: this.calendarService.weekends.includes(date.getDay()),\n      isSelected: false,\n      isHovered: false,\n      isInPeriod: this.getIsInPeriod(date),\n      date: date\n    };\n\n    return this.day;\n  }\n\n  getIsInPeriod(date: Date): boolean {\n    if (\n      this.calendarService.selectMode === 'period' &&\n      this.calendarService.selectedDates.value.length == 2 &&\n      date.getTime() >= this.calendarService.selectedDates.value[0].getTime() &&\n      date.getTime() <= this.calendarService.selectedDates.value[1].getTime()\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  getDay() {\n    return this.day;\n  }\n\n  sortByDate(a, b) {\n    if (a.getTime() > b.getTime()) return 1;\n    if (a.getTime() == b.getTime()) return 0;\n    if (a.getTime() < b.getTime()) return -1;\n  }\n\n  toggleDate() {\n    this.calendarService.clickDayKey.next({\n      key: new Date().getYmd() + '' + Math.random(),\n      day: this.day\n    });\n\n    if (this.calendarService.selectMode === 'single') {\n      if (this.calendarService.selectedDates.value.length > 0) {\n        this.calendarService.selectedDates.next([this.day.date]);\n      }\n    } else if (this.calendarService.selectMode === 'multiple') {\n      if (this.day.isSelected) {\n        const selectedDates = this.calendarService.selectedDates.value.filter(\n          (elem) => elem.getYmd() !== this.day.date.getYmd()\n        );\n        selectedDates.sort(this.sortByDate);\n        this.calendarService.selectedDates.next(selectedDates);\n      } else {\n        const selectedDates = this.calendarService.selectedDates.value;\n        selectedDates.push(this.day.date);\n        this.calendarService.selectedDates.next(selectedDates);\n      }\n    } else if (this.calendarService.selectMode === 'period') {\n      if (this.day.isSelected) {\n        const selectedDates = this.calendarService.selectedDates.value.filter(\n          (elem) => elem.getYmd() !== this.day.date.getYmd()\n        );\n        this.calendarService.selectedDates.next(selectedDates);\n      } else {\n        if (this.calendarService.selectedDates.value.length == 2) {\n          this.calendarService.selectedDates.next([this.day.date]);\n        } else if (this.calendarService.selectedDates.value.length < 2) {\n          const selectedDates = this.calendarService.selectedDates.value;\n          selectedDates.push(this.day.date);\n\n          selectedDates.sort(this.sortByDate);\n\n          this.calendarService.selectedDates.next(selectedDates);\n        }\n      }\n    }\n  }\n}\n","import { Component, OnInit, Input, OnChanges, OnDestroy, ViewChild, ViewContainerRef } from '@angular/core';\nimport { CalendarService } from '../_service/calendar.service';\nimport { DayService } from '../_service/day.service';\nimport { Subscription } from 'rxjs';\nimport { DayDirective } from '../day.directive';\n\n@Component({\n  selector: 'app-day-view',\n  templateUrl: './day-view.component.html',\n  providers: [DayService]\n})\nexport class DayViewComponent implements OnInit, OnChanges, OnDestroy {\n  @Input() date: Date;\n  @Input() thisMonth: boolean;\n  @Input() dayDirective: DayDirective;\n  @ViewChild('tpl', { static: false, read: ViewContainerRef })\n  template: ViewContainerRef;\n  sub: Subscription;\n  sub1: Subscription;\n\n  constructor(public dayService: DayService, private calendarService: CalendarService) {}\n\n  createChildComponent(): void {\n    const viewContainerRef = this.template;\n    viewContainerRef.clear();\n    viewContainerRef.createEmbeddedView((this.dayDirective as any).template, (this.dayDirective as any).context);\n  }\n\n  isStartOrEndDatePeriod() {\n    if (this.getSelectMode() === 'period' && this.getSelectedDates().length == 2) {\n      if (this.date.getYmd() === this.getSelectedDates()[0].getYmd()) return 'start';\n\n      if (this.date.getYmd() === this.getSelectedDates()[1].getYmd()) return 'end';\n    }\n    return false;\n  }\n\n  getSelectedDates(): Date[] {\n    return this.calendarService.selectedDates.value;\n  }\n\n  getSelectMode(): string {\n    return this.calendarService.selectMode;\n  }\n\n  ngAfterViewInit(): void {\n    if (this.dayDirective && this.template) {\n      this.createChildComponent();\n    }\n  }\n\n  // bad idea, too mach subscribes for every day\n  ngOnInit(): void {\n    this.dayService.createDay(this.date);\n    this.sub = this.calendarService.selectedDates.subscribe((data) => {\n      const days = data.map((item) => item.getYmd());\n      this.dayService.day.isSelected = days.includes(this.dayService.day.date.getYmd());\n      this.dayService.day.isInPeriod = this.dayService.getIsInPeriod(this.dayService.day.date);\n    });\n  }\n\n  ngOnChanges(): void {\n    if (this.dayDirective && this.template) {\n      this.createChildComponent();\n    }\n  }\n\n  onClick(): void {\n    !this.dayService.day.isDisabled ? this.dayService.toggleDate() : null;\n  }\n  ngOnDestroy(): void {\n    this.sub.unsubscribe();\n  }\n}\n","<div class=\"dayWrap\">\n  <div\n    class=\"styledDay\"\n    *ngIf=\"thisMonth\"\n    (click)=\"onClick()\"\n    [ngClass]=\"{\n      isDisabled: dayService.day.isDisabled,\n      isSelected: dayService.day.isSelected,\n      isWeekEnd: dayService.day.isWeekEnd,\n      isInPeriod: dayService.day.isInPeriod,\n      period: getSelectMode() === 'period',\n      end: isStartOrEndDatePeriod() === 'end',\n      start: isStartOrEndDatePeriod() === 'start'\n    }\"\n  >\n    <span *ngIf=\"!dayDirective\" class=\"day\">\n      {{ dayService.day.date | date: 'd' }}\n    </span>\n    <div class=\"dayDir\">\n      <ng-template #tpl></ng-template>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { DayDirective } from '../day.directive';\nimport { WeekService } from '../_service/week.service';\n\n@Component({\n  selector: 'app-week-view',\n  templateUrl: './week-view.component.html',\n  styleUrls: ['./week-view.component.scss'],\n  providers: [WeekService]\n})\nexport class WeekViewComponent implements OnInit {\n  @Input() date: Date;\n  @Input() firstMonthDate: Date;\n  @Input() dayDirectives: DayDirective[];\n  dates: Date[] | null[];\n  constructor(private weekService: WeekService) {}\n\n  ngOnInit() {\n    this.dates = this.weekService.getWeek(this.date);\n  }\n\n  getDayDirective(date: Date): DayDirective {\n    const day = this.dayDirectives.find((directive: DayDirective) => directive.date.getTime() === date.getTime());\n    return day;\n  }\n}\n","<div *ngFor=\"let date of dates\" class=\"f1\">\n  <app-day-view\n    [dayDirective]=\"getDayDirective(date)\"\n    [date]=\"date\"\n    [thisMonth]=\"date.getMonth() === firstMonthDate.getMonth() && date.getFullYear() === firstMonthDate.getFullYear()\"\n  >\n  </app-day-view>\n</div>\n","import { Component, OnInit, Input, HostBinding, Output, ViewChild, ElementRef, OnDestroy } from '@angular/core';\nimport { CalendarService } from '../_service/calendar.service';\nimport { MonthService } from '../_service/month.service';\nimport { Subscription } from 'rxjs';\nimport { DayDirective } from '../day.directive';\n\n@Component({\n  selector: 'app-month-view',\n  templateUrl: './month-view.component.html',\n  providers: [MonthService]\n})\nexport class MonthViewComponent implements OnInit, OnDestroy {\n  @Input() date: Date;\n  @Input() updateDate: any;\n  @Input() dayDirectives: DayDirective[];\n\n  @Output() @HostBinding('style') elWidth: number;\n  @ViewChild('wrap', { static: true }) elementView: ElementRef;\n\n  weeks: Date[] | null[];\n  animationStep: string;\n  weekDays: Date[];\n  subscription = new Subscription();\n\n  constructor(private monthService: MonthService, private calendarService: CalendarService) {}\n\n  showYears(): void {\n    this.calendarService.getShownYears(this.date);\n  }\n\n  ngOnInit(): void {\n    this.subscription.add(\n      this.calendarService.animationStep.subscribe((data) => {\n        this.animationStep = data;\n      })\n    );\n    this.weeks = this.monthService.getMonth(this.date);\n\n    const weekDays = [];\n    for (let i = 0; i < 7; i++) {\n      weekDays.push(this.weeks[0].adjustDate(i));\n    }\n    this.weekDays = weekDays;\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n\n  getWeekDayDirectives(weekStartDate: Date): DayDirective[] {\n    weekStartDate.setHours(0, 0, 0, 0);\n    const weekEndDate = new Date(weekStartDate);\n    weekEndDate.setDate(weekStartDate.getDate() + 7);\n    weekEndDate.setHours(0, 0, 0, 0);\n    const directives = this.dayDirectives.filter(\n      (directive) =>\n        directive.date.getTime() >= weekStartDate.getTime() && directive.date.getTime() < weekEndDate.getTime()\n    );\n    return directives;\n  }\n}\n","<div #wrap class=\"monthWrap monthOne {{ animationStep }}\">\n  <div class=\"monthHeader\" (click)=\"showYears()\">\n    {{ date | date: 'LLLL yyyy' }}\n  </div>\n  <div class=\"weekWrap\" style=\"flexdirection: 'row'\">\n    <div style=\"display: flex; flexdirection: 'row'\">\n      <div *ngFor=\"let d of weekDays\" class=\"dayWeekTitle\">{{ d | date: 'EEEEE' }}</div>\n    </div>\n    <app-week-view\n      *ngFor=\"let weekStartDate of weeks\"\n      [date]=\"weekStartDate\"\n      [dayDirectives]=\"getWeekDayDirectives(weekStartDate)\"\n      [firstMonthDate]=\"date\"\n      style=\"flexdirection: 'row'\"\n    >\n    </app-week-view>\n  </div>\n</div>\n","import { Component, OnInit, Input, ViewChild, ElementRef } from '@angular/core';\nimport { CalendarService } from '../_service/calendar.service';\n\n@Component({\n  selector: 'app-month-select',\n  templateUrl: './month-select.component.html'\n})\nexport class MonthSelectComponent implements OnInit {\n  constructor(private calendarService: CalendarService) {}\n\n  @Input() date: Date;\n  @ViewChild('wrap', { static: true }) elementView: ElementRef;\n  months = [];\n  animationStep: string;\n\n  ngOnInit(): void {\n    for (let i = 0; i < 12; i++) {\n      const date = new Date(this.date);\n      date.setMonth(0);\n      date.adjustMonth(i);\n      this.months.push(date);\n    }\n\n    this.calendarService.animationStep.subscribe((data) => {\n      this.animationStep = data;\n    });\n  }\n\n  setMonth(month: Date): void {\n    this.calendarService.getShownMonths(month);\n  }\n}\n","<div\n  #wrap\n  style=\"display: flex; flex-direction: column; flex: 1; width: 100%\"\n  class=\"monthWrap monthOne {{ animationStep }}\"\n>\n  <div class=\"monthHeader\">\n    {{ date | date: 'yyyy' }}\n  </div>\n  <div style=\"display: flex; flex-direction: row; flex: 1; flex-wrap: wrap\">\n    <ng-container *ngFor=\"let month of months; let i = index\">\n      <div class=\"monthItem\" (click)=\"setMonth(month)\">\n        {{ month | date: 'LLL' }}\n      </div>\n      <div *ngIf=\"(i + 1) % 3 === 0 && i != 0 && i != 11\" style=\"width: 100%; height: 1px\"></div>\n    </ng-container>\n  </div>\n</div>\n","import {\n  Component,\n  OnInit,\n  Input,\n  OnChanges,\n  ViewChildren,\n  AfterViewChecked,\n  EventEmitter,\n  Output,\n  ChangeDetectorRef,\n  ViewEncapsulation,\n  AfterViewInit,\n  ContentChildren,\n  AfterContentInit,\n  QueryList\n} from '@angular/core';\nimport { CalendarService } from '../_service/calendar.service';\nimport { Day, SelectMode, ViewMode, DisabledDates } from '../interfaces';\nimport { DayDirective } from '../day.directive';\n\n@Component({\n  selector: 'ngx-custom-datepicker',\n  templateUrl: './custom-datepicker.component.html',\n  styleUrls: ['./custom-datepicker.component.scss'],\n  providers: [CalendarService],\n  encapsulation: ViewEncapsulation.None\n})\nexport class CustomDatepickerComponent implements OnInit, OnChanges, AfterViewChecked, AfterViewInit {\n  /**\n   * @description\n   *  Array of selected dates.\n   * */\n  @Input() selectedDates: Date[] = [];\n  @Output() selectedDatesChange = new EventEmitter<Date[]>();\n\n  /**\n   * @description\n   *  Callback event when click on day\n   */\n  @Output() onDayClick = new EventEmitter<Day>();\n\n  /**\n   * @description\n   *  Array custom definitions of days. Subscribable\n   * @see `Day`\n   * */\n  @Input() days: Day[];\n\n  /**\n   * @description\n   *  Date whould be render for default calendar .\n   * */\n  @Input() shownDate: Date;\n\n  /**\n   * @description\n   * Present mode of calendar. Year, quarter, semester or qty months. Default 1.\n   * */\n  @Input() viewMode: ViewMode | number;\n\n  /**\n   * @description\n   * Start week day, default 0\n   */\n  @Input() weekStart = 0;\n\n  /**\n   * @description\n   * Weekends, default [0,6], set Day.isWeekend true\n   */\n  @Input() weekends: number[] = [0, 6];\n\n  /**\n   * @description\n   * Single, Multiple, Period\n   * @See `SelectMode`\n   */\n  @Input() selectMode: SelectMode;\n\n  /**\n   * @description\n   * Disable select dates. Before after date or array\n   * @See `DisabledDates`\n   */\n  @Input() disabledDates: DisabledDates;\n\n  @ViewChildren('column') columns;\n\n  width: number | null;\n\n  @ContentChildren(DayDirective)\n  dayDirectivesQueryList: QueryList<DayDirective>;\n  dayDirectives: DayDirective[] = [];\n\n  constructor(private calendarService: CalendarService, private cdr: ChangeDetectorRef) {}\n\n  private __getDirectives(): void {\n    if (this.dayDirectivesQueryList) {\n      this.dayDirectives = this.dayDirectivesQueryList.toArray();\n      this.dayDirectivesQueryList.changes.subscribe((data) => {\n        this.dayDirectives = data.toArray();\n      });\n    }\n  }\n\n  ngAfterViewInit(): void {\n    this.__getDirectives();\n  }\n\n  getMonthDayDirectives(date: Date): DayDirective[] {\n    return this.dayDirectives.filter(\n      (directive: DayDirective) =>\n        directive.date.getMonth() === date.getMonth() && directive.date.getFullYear() === date.getFullYear()\n    );\n  }\n\n  recountWidth(): void {\n    let width = 0;\n    this.columns ? this.columns.toArray().map((item) => (width += item.elementView.nativeElement.clientWidth)) : null;\n    this.calendarService.animationStep.value === 'stop' && this.calendarService.viewSelectorMode === 'days'\n      ? (this.width = width)\n      : null;\n\n    this.cdr.detectChanges();\n  }\n\n  ngAfterViewChecked(): void {\n    this.recountWidth();\n  }\n\n  ngOnInit(): void {\n    if (!this.shownDate) {\n      this.shownDate = new Date();\n    }\n\n    this.calendarService.animationStep.subscribe((data) => {\n      if (data === 'stop') {\n        setTimeout(() => this.recountWidth(), 10);\n      }\n    });\n\n    this.calendarService.selectedDates.subscribe((data) => {\n      this.selectedDatesChange.emit(data);\n    });\n\n    this.calendarService.clickDayKey.subscribe((data) => {\n      data ? this.onDayClick.emit(data.day) : null;\n    });\n\n    this.calendarService.days.next(this.days);\n    this.calendarService.weekStart = this.weekStart;\n    this.calendarService.weekends = this.weekends;\n    this.calendarService.viewMode = this.viewMode;\n    this.calendarService.viewSelectorMode = 'days';\n    this.calendarService.selectMode = this.selectMode;\n    this.calendarService.shownDate = this.shownDate;\n    this.calendarService.setSelectedDates(this.selectedDates);\n    this.calendarService.setDays(this.days);\n    this.calendarService.getShownMonths(this.shownDate);\n    this.calendarService.setDisabledDates(this.disabledDates);\n  }\n\n  getCalendar() {\n    return this.calendarService.calendar;\n  }\n\n  getViewSelectorMode() {\n    return this.calendarService.viewSelectorMode;\n  }\n\n  calculate() {\n    const date = this.shownDate;\n    let countMonths = 0;\n    const months = [];\n    const lastDate = date ? date : this.calendarService.getLastDate();\n    countMonths = this.calendarService.getCountMonths();\n\n    for (let i = countMonths - 1; i >= 0; i--) {\n      months.push(new Date(lastDate).adjustMonth(-i));\n    }\n    return months;\n  }\n\n  isEqual(array, array1) {\n    console.log(array, array1);\n    const a = array.filter((item) => array1.includes(item));\n    return a.length === 0 && array.length === array1.length;\n  }\n\n  private _viewMode(simpleChange) {\n    if (simpleChange.viewMode.currentValue !== simpleChange.viewMode.previousValue) {\n      this.calendarService.viewMode = simpleChange.viewMode.currentValue;\n      this.calendarService.getShownMonths(this.shownDate);\n      setTimeout(() => this.recountWidth(), 10);\n    }\n  }\n\n  private _selectMode(simpleChange) {\n    if (simpleChange.selectMode.currentValue !== simpleChange.selectMode.previousValue) {\n      this.calendarService.selectMode = simpleChange.selectMode.currentValue;\n      this.calendarService.getShownMonths(this.shownDate);\n      setTimeout(() => this.recountWidth(), 10);\n    }\n  }\n\n  private _shownDate(simpleChange) {\n    if (simpleChange.shownDate.currentValue !== simpleChange.shownDate.previousValue) {\n      this.calendarService.shownDate = simpleChange.shownDate.currentValue;\n      this.calendarService.getShownMonths(this.shownDate);\n      setTimeout(() => this.recountWidth(), 10);\n    }\n  }\n\n  ngOnChanges(simpleChange) {\n    simpleChange.viewMode && this._viewMode(simpleChange);\n    simpleChange.selectMode && this._selectMode(simpleChange);\n    simpleChange.shownDate && this._shownDate(simpleChange);\n    simpleChange.days && this.calendarService.days.next(this.days);\n    simpleChange.selectedDates && this.calendarService.setSelectedDates(this.selectedDates);\n  }\n\n  goNext() {\n    const lastDate = this.calendarService.calendar[this.calendarService.calendar.length - 1];\n    this.calendarService.goNext(lastDate);\n  }\n  goPrev() {\n    const firstDate = this.calendarService.calendar[0];\n    this.calendarService.goPrev(firstDate);\n  }\n}\n","<div class=\"calendarWrap\">\n  <div class=\"headerCalendar\"></div>\n  <div class=\"dateSelector\">\n    <div (click)=\"goPrev()\" class=\"nextPrevBtn\" style=\"left: 0\">{{ '<' }}</div>\n    <div class=\"wrapMonths\" [ngStyle]=\"{ width: width + 'px' }\">\n      <div class=\"months\" *ngIf=\"getViewSelectorMode() === 'days'\">\n        <app-month-view\n          *ngFor=\"let date of getCalendar()\"\n          #column\n          [date]=\"date\"\n          [dayDirectives]=\"getMonthDayDirectives(date)\"\n        >\n        </app-month-view>\n      </div>\n\n      <div *ngIf=\"getViewSelectorMode() === 'months'\" style=\"width: 100%; display: flex; flex: 1\">\n        <app-month-select *ngFor=\"let date of getCalendar()\" #column [date]=\"date\"> </app-month-select>\n      </div>\n    </div>\n    <div (click)=\"goNext()\" class=\"nextPrevBtn\" style=\"right: 0\">{{ '>' }}</div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-year-select',\n  templateUrl: './year-select.component.html',\n  styleUrls: ['./year-select.component.scss']\n})\nexport class YearSelectComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n","<p>year-select works!</p>\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { CustomDatepickerComponent } from './calendar/custom-datepicker.component';\nimport { MonthViewComponent } from './month-view/month-view.component';\nimport { DayViewComponent } from './day-view/day-view.component';\nimport { MonthSelectComponent } from './month-select/month-select.component';\nimport { YearSelectComponent } from './year-select/year-select.component';\nimport { WeekViewComponent } from './week-view/week-view.component';\nimport { CommonModule } from '@angular/common';\nimport { DayDirective } from './day.directive';\n\n@NgModule({\n  declarations: [\n    CustomDatepickerComponent,\n    MonthViewComponent,\n    DayViewComponent,\n    MonthSelectComponent,\n    YearSelectComponent,\n    WeekViewComponent,\n    DayDirective\n  ],\n  imports: [CommonModule],\n  exports: [CustomDatepickerComponent, DayDirective]\n})\nexport class CustomDatepickerModule {\n  static forRoot(): ModuleWithProviders<CustomDatepickerModule> {\n    return {\n      ngModule: CustomDatepickerModule\n    };\n  }\n}\n","/*\n * Public API Surface of ngx-custom-datepicker\n */\n\nexport * from './lib/calendar/custom-datepicker.component';\nexport * from './lib/custom-datepicker.module';\nexport * from './lib/interfaces';\nexport * from './lib/day.directive';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1.CalendarService","i1.DayService","i2.CalendarService","i3","i1.WeekService","i2.DayViewComponent","i1.MonthService","i3.WeekViewComponent","i2","i2.MonthViewComponent","i3.MonthSelectComponent"],"mappings":"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"}